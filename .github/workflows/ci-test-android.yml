name: Test android

on:
  workflow_call:
    inputs:
      coverage:
        required: false
        type: boolean
        default: false
      api-level:
        required: false
        type: string
        default: "['31']"
      arch:
        required: false
        type: string
        default: "['x86_64']"

jobs:
  test-android:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        api-level: ${{ fromJson(inputs.api-level) }}
        arch: ${{ fromJson(inputs.arch) }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Cache Konan
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-konan-${{ github.sha }}
            ${{ runner.os }}-konan-

      - name: Cache BuildCache
        uses: actions/cache@v4
        with:
          path: '**/.gradle/build-cache/**'
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ github.sha }}
            ${{ runner.os }}-build-

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Cache AVD
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD And Generate Snapshot For Caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run Instrumented Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew :android:connectedCheck

      - name: Coverage Android
        if: inputs.coverage == true
        run: ./gradlew --stacktrace androidCoverage

      - name: Cache Reports
        uses: actions/cache/save@v4
        with:
          path: |
            **/reports/detekt/**/*.xml
            **/reports/jacoco/**/*.xml
            **/test-results/**/*
          key: reports-android-${{ github.sha }}

      #      - name: Run acceptance test
      #        run: |
      #          curl -Ls "https://get.maestro.mobile.dev" | bash
      #          maestro test ./acceptance-test/main-flow.yml

      - name: Cleanup
        run: ./gradlew clean